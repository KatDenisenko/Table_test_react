{"version":3,"sources":["App.module.css","Table/DataTable.jsx","Form/AddForm.jsx","App.js","serviceWorker.js","index.js","Table/DataTable.module.css"],"names":["module","exports","appWrapper","dataTable","_ref","allData","sortData","sortDataFuncAz","sortDataFuncZa","sortNumbers","deleteData","react_default","a","createElement","Table","celled","Header","Row","HeaderCell","className","style","headerCell","Icon","name","onClick","phone","Body","length","map","el","key","id","Cell","firstName","toUpperCase","slice","lastName","ageWrapper","age","color","corner","addForm","error","add","handleChange","Segment","Form","onSubmit","Group","widths","Field","value","onChange","type","placeholder","required","min","max","inline","Label","pointing","Message","Button","App","state","JSON","parse","localStorage","getItem","e","console","log","target","_this","setState","Object","defineProperty","preventDefault","regExp","newResult","match","obj","toLowerCase","uuid","prev","concat","toConsumableArray","push","setItem","stringify","str","arr","sort","b","sortArr","delEl","localStorageData","filterArr","filter","AddForm","this","DataTable","Component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.121c5931.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"App_appWrapper__3HVKQ\"};","import React  from 'react';\r\nimport {Table,Icon} from 'semantic-ui-react';\r\nimport style from './DataTable.module.css'\r\n\r\nconst dataTable =({allData,sortData,sortDataFuncAz,sortDataFuncZa, sortNumbers, deleteData})=> {\r\n return (\r\n<Table celled>\r\n    <Table.Header>\r\n      <Table.Row>\r\n        <Table.HeaderCell>\r\n        <div className={style.headerCell}>\r\n            <Icon name='sort alphabet up' onClick={()=>sortDataFuncAz('firstName')}/>\r\n            First Name\r\n            <Icon name ='sort alphabet down'onClick={()=>sortDataFuncZa('firstName')}/>\r\n        </div>\r\n         </Table.HeaderCell>\r\n       <Table.HeaderCell>\r\n       <div className={style.headerCell}>\r\n          <Icon name='sort alphabet up' onClick={()=>sortDataFuncAz('lastName')}/>\r\n          Last Name\r\n          <Icon name ='sort alphabet down'onClick={()=>sortDataFuncZa('lastName')}/>\r\n        </div>\r\n         </Table.HeaderCell>\r\n         <Table.HeaderCell>\r\n         <div className={style.phone}>\r\n           Phone\r\n         </div>\r\n           </Table.HeaderCell>\r\n        <Table.HeaderCell>\r\n        <div className={style.headerCell}>\r\n          <Icon name='sort up' onClick={()=>sortNumbers('up')}/>\r\n              Age\r\n          <Icon name ='sort down'onClick={()=>sortNumbers('down')}/>\r\n        </div>\r\n          </Table.HeaderCell>\r\n      </Table.Row>\r\n    </Table.Header>\r\n\r\n    <Table.Body>\r\n        \r\n      {sortData.length>0? sortData.map(el=>\r\n        <Table.Row key={el.id}>\r\n            <Table.Cell>{el.firstName[0].toUpperCase()+el.firstName.slice(1)}</Table.Cell>\r\n            <Table.Cell>{el.lastName[0].toUpperCase()+el.lastName.slice(1)}</Table.Cell>\r\n            <Table.Cell >\r\n            {el.phone}\r\n            </Table.Cell>\r\n            <Table.Cell>\r\n            <div className={style.ageWrapper}>\r\n            {el.age}\r\n            <Icon name='user delete' color='grey' corner='top right'  id={el.id} onClick={deleteData} />\r\n            </div>\r\n            </Table.Cell>\r\n            {/* <Icon label={{ as: 'a', color: 'red', corner: 'right', icon: 'save' }}/> */}\r\n            {/* <Icon name='delete' color='grey' top right  id={el.id} onClick={deleteData}/> */}\r\n        </Table.Row>)\r\n        :\r\n      allData.map(el=>\r\n        <Table.Row key={el.id}>\r\n            <Table.Cell>{el.firstName[0].toUpperCase()+el.firstName.slice(1)}</Table.Cell>\r\n            <Table.Cell>{el.lastName[0].toUpperCase()+el.lastName.slice(1)}</Table.Cell>\r\n            <Table.Cell>\r\n            {el.phone}\r\n            </Table.Cell>\r\n            <Table.Cell>\r\n            <div className={style.ageWrapper}>\r\n            {el.age}\r\n            <Icon name='user delete' color='grey' corner='top right' id={el.id} onClick={deleteData} />\r\n            </div>\r\n           \r\n      </Table.Cell>\r\n      {/* <Icon  name='delete' color='grey' id={el.id} top right onClick={deleteData}/> */}\r\n        </Table.Row>\r\n      )\r\n      }\r\n    </Table.Body>\r\n\r\n  </Table>\r\n )\r\n}\r\n\r\nexport default dataTable;\r\n\r\n","import React from 'react'\r\nimport { Segment, Button, Form, Message, Label} from 'semantic-ui-react';\r\n\r\n\r\nconst  addForm = ({error,firstName, lastName,phone, age, add,handleChange})=>{\r\n  return(\r\n  <Segment>\r\n   <Form onSubmit={add}>\r\n   <Form.Group widths='equal'>\r\n      <Form.Field>\r\n          <label>First Name</label>\r\n          <input name=\"firstName\" value={firstName}\r\n            onChange = {handleChange} type=\"text\" placeholder='First Name' required/>\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Last Name</label>\r\n          <input name=\"lastName\" value={lastName}\r\n            onChange = {handleChange} type=\"text\" placeholder='Last Name' required/>\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Age</label>\r\n          <input name=\"age\" value={age}\r\n            onChange = {handleChange} type=\"number\" min='1' max='100'placeholder='Age' required/>\r\n        </Form.Field>\r\n   </Form.Group>\r\n     <Form.Field inline>\r\n      <label>Phone</label>\r\n      <input name=\"phone\" value={phone}\r\n        onChange = {handleChange} type=\"tel\" placeholder='+XX(XXX)XXX-XX-XX' required/>\r\n        <Label pointing='left'>Your phone must be in format +XX(XXX)XXX-XX-XX</Label>\r\n    </Form.Field>\r\n    {error?\r\n    <Message color=\"red\">\r\n    <Message.Header>Error</Message.Header>\r\n    <p>\r\n      {error}\r\n    </p>\r\n  </Message>: null}\r\n  <Button type='submit'>Add</Button>\r\n  </Form>\r\n  </Segment>\r\n  );\r\n}\r\n\r\nexport default addForm;","import React, { Component } from 'react';\nimport DataTable from './Table/DataTable';\nimport AddForm from './Form/AddForm';\nimport style from './App.module.css';\nimport {Segment} from 'semantic-ui-react';\nimport uuid from 'uuid/v4';\n\nclass App extends Component {\n\n  state={\n    \n    allData:JSON.parse(localStorage.getItem('dataTable')) || [],\n    // [\n    //   {\n    //   firstName:'ivan',\n    //   lastName:'ivanov',\n    //   age:25,\n    //   phone:'+380508975465',\n    //   id: uuid(),\n    // },\n    // {\n    //   firstName:'strashula',\n    //   lastName:'mydrui',\n    //   age:30,\n    //   phone:'+380508975460',\n    //   id:uuid(),\n    // },\n    // {\n    //   firstName:'steve',\n    //   lastName:'jobs',\n    //   age:56,\n    //   phone:'+380508976760',\n    //   id:uuid(),\n    // },\n    // {\n    //   firstName:'bill',\n    //   lastName:'gates',\n    //   age:56,\n    //   phone:'+380508976760',\n    //   id:uuid(),\n    // }\n    // ],\n    sortData:[],\n    firstName:'',\n    lastName:'',\n    phone:'',\n    age:'',\n    error:'',\n  }\n\n  handleChange=(e)=>{\n    console.log(e.target.name);\n    console.log(e.target.value)\n    let key=e.target.name;\n    let value=e.target.value;\n    this.setState({\n      [key]: value,\n    })\n  }\n\n  add=(e)=>{\n    e.preventDefault();\n    let regExp = /^(([a-z]+)|([а-яё]+))$/i;\n    let regPhone  =  /^((\\+\\d{1,2}\\(\\d{3}\\)\\d{3}(-)\\d{2}(-)\\d{2}))$/gm;\n    let newResult = JSON.parse(localStorage.getItem('dataTable')) || [];\n    if (this.state.firstName.match(regExp)){\n      console.log('firstName done')\n      if (this.state.lastName.match(regExp)) {\n        console.log('lastName done')\n        if(this.state.phone.match(regPhone)) {\n          let obj={\n            firstName: this.state.firstName.toLowerCase(),\n            lastName: this.state.lastName.toLowerCase(),\n            phone:this.state.phone,\n            age:this.state.age,\n            id:uuid(),\n          }\n          this.setState(prev=>({\n            error:'',\n            allData:[...prev.allData,obj],\n            sortData:[],\n            firstName:'',\n            lastName:'',\n            phone:'',\n            age:'',\n\n\n          }));\n         \n          newResult.push(obj)\n          localStorage.setItem('dataTable', JSON.stringify(newResult));\n        } else {\n          this.setState({\n            error:'Phone number doesn\\'t valid.Please enter your number in format +XX(XXX)XXX-XX-XX',\n            phone:'',\n          })\n        }\n      } else {\n        this.setState({\n          error:'Field Last name contains numbers or symbols.Please enter correct data.',\n          lastName:'',\n        })\n      }\n    \n    }\n    else {\n      this.setState({\n        error:'Field First name contains numbers or symbols.Please enter correct data.',\n        firstName:'',\n      })\n    }\n    \n  }\n  sortDataFuncAz=(str)=>{\n    console.log('sortDataFunc');\n  let arr = this.state.allData.sort(function (a, b) {\n    if (a[str] > b[str]) {\n      return 1;\n    }\n    if (a[str] < b[str]) {\n      return -1;\n    }\n    // a должно быть равным b\n    return 0;\n  });\n  console.log(this.state.allData)\n  console.log(arr)\n  this.setState({\n    sortData:arr,\n  })\n  }\n  sortDataFuncZa=(str)=>{\n    console.log('sortDataFunc');\n  let arr = this.state.allData.sort(function (a, b) {\n    if (a[str] > b[str]) {\n      return -1;\n    }\n    if (a[str] < b[str]) {\n      return 1;\n    }\n\n    return 0;\n  });\n\n  this.setState({\n    sortData:arr,\n  })\n  }\n\n  sortNumbers=(type)=>{\n    if (type==='up') {\n      let sortArr= this.state.allData.sort(function(a, b) {\n        return a.age - b.age;\n      })\n      this.setState({\n        sortData:sortArr,\n      })\n    }\n      else {\n        if (type==='down') {\n          let sortArr= this.state.allData.sort(function(a, b) {\n            return b.age - a.age;\n          })\n          this.setState({\n            sortData:sortArr,\n          })\n        }\n        \n      }\n    }\n\n    deleteData=(e)=>{\n      let delEl=e.target.id;\n      let localStorageData = JSON.parse(localStorage.getItem('dataTable')) || [];\n      if (this.state.sortData.length>0)\n      {\n        let filterArr=(this.state.sortData.filter(el=>el.id!==delEl))\n        this.setState({\n          sortData:filterArr,\n        })\n        localStorage.setItem('dataTable', JSON.stringify(filterArr));\n\n      } else {\n        this.setState({\n          allData:this.state.allData.filter(el=>el.id!==delEl),\n        })\n        let filterArr=localStorageData.filter(el=>el.id!==delEl);\n      localStorage.setItem('dataTable', JSON.stringify(filterArr));\n      }\n      \n    }\n\n  render() {\n    \n    return (\n      <div className={style.appWrapper}>\n      <Segment >\n          <AddForm firstName={this.state.firstName} lastName={this.state.lastName} phone={this.state.phone} age={this.state.age} handleChange={this.handleChange} add={this.add} error={this.state.error}/>\n          <DataTable  deleteData={this.deleteData}sortNumbers = {this.sortNumbers} sortDataFuncZa={this.sortDataFuncZa} sortDataFuncAz = {this.sortDataFuncAz} allData={this.state.allData} sortData={this.state.sortData}/>  \n      </Segment> \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerCell\":\"DataTable_headerCell__1wpkO\",\"phone\":\"DataTable_phone__2J7V7\",\"ageWrapper\":\"DataTable_ageWrapper__wx2VR\"};"],"sourceRoot":""}